<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAABaCAYAAAA4qEECAAAABGdBTUEAALGPC/xhBQAACZFJREFUeF7t
        nXesbUUVhx+I9E5AUHrvHSmBaOBhgNAChCKIQVooalCEUAQUMCA1QBBCVXpAMQETKwQDqGAIEJp0BLvY
        KQr6/L5713l3Mvfs++5995TZ5+wv+f3x7szZe83svaesWTNvRkNDQ0NDw1SYNWvWAmg1NBMdhb6KrkDX
        oWvR5ehMdDj6OFoJfTB+3jARVhTaGH0RfQ+9it5G/0NVmPYWegl9Bx2H1kUfiMs2tKBSFkSfQLeiP6CJ
        KnZO/Be9gXzrd0DNW04lzIO2Rrejf6BO8xdkhW8Utxw+KPwS6BT0O1TFe+i36OfoTnQlugBdiK5CNhWP
        Ir+C91EVr6Bj0MJx++GAAq+J7kJWZI6fvhVjp3cgsr1dHI1rc/0bWhJtgA5FNyObjXZNz7vIa344fj7Y
        UNAtkG9ojpXzLDoZ+SDmjZ9MGn4zH1offQW9jPIK998/RGvHTwYTCrglegLl/BVdhFaLrNOGa/klXI3+
        iXIeROtE1sGCgllw29Ocp9GeqOPDMa45PzoYOfTL+TFaMbIOBhRoGXSPpct4AHV9RMA9tkG/9IYZ30SL
        RrZ6Q0HmRecgO7mU+9Aaka3rcK+NUP5F/QedEFnqDQVxCv1nS5XwGFovsvQM7rkV+pUGJLyOtoos9YQC
        OFb+vqVJ+D2aGVl6DvfeF/1NQxJuQwtGlvqB8XZEjl9b2HycFsl9gfs79nbCk+KsdLfIUi8wfDFkz57y
        EFousvQNbFgFPalBCc48F4gs9QGjd0bpGPbf6FOR3Hew5bMo7aDtRz4ayfUBoy8bMX8MZ4PLRHLfwZYV
        kWP4lLMiuR5g8LLo8RHTxzglkosBm74+atpsfooWi+TywdjtUer2fBMVN4TCJoee/9LA4I9o40guH4w9
        dsTsMWw2lojkYsCm5VHafOhqPSiSywdj8/b5ukgqCuzS2/ftEQvHqEc7jaEaf/eIyWOcHMnFgW3nj5o4
        mxsiqWwwdBFkp9JCH3Axw7ocbPvciJVj3IvKX2fESKfdqafMVZS9Irk4sO3TKF0g0Nm1UCSXC0YuhXQa
        tdBDtnskFwe2HYLSitZ1W/7aIka6vveIFgf25PtGcnFgmwE4KboNyncwaST6iRYnHBnJxYFtXxo1cTau
        rJcffIOROvp1O6acHcnFgW2GlqVcGUnlg7Hnjto8Gz1jxb0l2OTX56p4yomRXD4Y+0mUBrQ8g1aI5GLA
        pjXQaxoY6Duvj18aY12fM3qohYGKu0ZyMWCTATppEI9BlatHcvlgrJOWvEO8IpKLAHucwRrZlGJHOH9k
        qQcYbMRRirEVa0Vy38GWTZFxfS1cBDgqkusDRtt8/MYSJJwZyX0FO4xivWTEojFeRPVpNlpgtIughsym
        2Ab23d+LDdshV+NTLojk+oHx2yKd6Sm3oEUiS8/h3kaf5lFTjjzqG0ON8b7Vl1qSBBdpT0DzRLaewT21
        5yyUDj31cxTRpE0LCuFYNV/a/xPaL7L0DO75GfR3DUgwBKK4Mf5cQUH2Q3l0kAHjPXGfch/dAnrp8mbM
        sf7Oka3+UBg/Wbeq6TJNcVuFb1nXHO1c22m2zn0XiFOcRPn3njdhXYUCLYrcd5JHlRpkYxB6x7c8cM1V
        kcHoVmqKD/w8VL/IpMlAwVwUcMiXb+yx8n+BDkDTjqvgGo4sDkPuLkid+mJn7IMdjLjoKiigS10WNH/L
        xL/pTXPjj5FEk97HQl6bJ99gd9m6ZpkGV7Yw1uQMNBy7syio7aaxH3aI7fDTNo75BmTFGZDj6GU55Feh
        PoTWQh9DXsvxudP8dju9xJmf0a3zhRnDAQV2GuyWB7ci+zlXYbNiO+5D0d3qeqRyB5dTfCON8uYhxXSd
        RxvErYcTKsA1RttT2+h8VNIJfJOPR+5FHI4mYyKoBAMjbZuNq3BCM9FbOlX8KhxDu/CqV3EzNJgjjslC
        Bdh+WxHGL9vu2kw43rYJ8I13xKKsPB/GVB+I+X2Q30UHoWXj1vWGgnjuxnrIszemtBuW/I4klkbrIDvE
        3ZGzTOVQ0Nne0ci39GLk5n2n1DqJPFpiTg/BvsGdWp9H9dy6jOGuYFg5Hg2hS9Itw4dEclfg+k61nRj5
        UHdEX0B3oOdRu+FeC78Qx9ye9VFMsPwcwViHXUaU5tve7PB6Gr7L/fwqHJPvjZyZWulVQ0D/7hh8D1Tu
        khbGLYT0XTyH2n22hlv1LaKee/vGr4yMTrJjtHlphxObb6CO7U3vGBi1OnLL7zsox47LT3OXyN53sMUm
        xjbfTjGN+m/hi+L2kK7sU58rMGQnlAY2ptg2ewDKRyJ7UWCXX+Fe6H7UbhzvKTZfRv3b28LN7fBsKtLV
        5Ba+Jdej9SN70WCn03pHHx7KkuMD8Gvt/ciEmzpsOwm1OwvJ6bFj1NpNCrB5E2R8R/5225T8APUuZIKb
        Wcl6wXIPnMMk27xavMVVYL9ugVNRvlggHqrSfb8JN7G5sM3NK9lOUPfn0pG11lAORyj7IH0lOQ+jdSNr
        d+AGzsTy43NsPmxG6ntCQAWUyZCJdh29IW8rR7bOwoV3Q2nwoljJrr0NrJ+Xshl19TOU46xzycjWGbig
        ZyLlYQM2HyeigXemU8YNUbplROyTvoY6U34uZHSoPosUb+IevXpFX04DyuopZ46oUvyiD4gs04MLuZyU
        O2WM4u/sZ1MDKPOuKI/bc5vz9I534wI6iPKn+BTqbq9bMJTdiU3+4rm6P3dfNz90Xc8hW4ozvgMjy1BC
        +RdGN1kZCTYhe0aWqcEPN0f59Nqp6HAvAwF14NGculxT9AhOrTnlB77NeSSoK9GbR5ahh7pw0Tf1bbti
        M7XFDX5g25w7WGxGBitWbRpQF55QmR4wIL7Vk/f0kdkGP3Xe24RsGskNAXXiumUal2IfNrkdaGR03Pwj
        f5VwIyp/626PoU58q/NZ4zVozl8+mewEXZJv4VCm2KMg+g1143/+kPICWiWSqyFTfiaS4+blI7khg7px
        ep6OzvRlT7yjgQyONr5l7gQH400nWAF1o38+34B0aSS3hwwu6aQnyNghHhHJDRVQR/kGVlf8q3efkaiX
        Lv2fJNxcs20kN1RAHXmGXroYYrRUdbgCiUb4pD8w5nilSG6ogDoyfvvXVljg4sj2kTweEl1UNQ6jhUOX
        +hwj2SeoI3cypCeu60beP5LHQ6LxZym+0R4d73+50ahaHgZjDEvKMVGt4yHRtb+GznBSVOt4SDxtNE9D
        B6g+/d3E0TwNHeD0qNbxkOhSjZsgjaZsNPeyDos73qihoaGhoR0zZvwf/oDbcHp9IMsAAAAASUVORK5C
        YII=
</value>
  </data>
</root>